datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id       Int      @id @default(autoincrement())
  email    String   @unique @db.VarChar(50)
  name     String   @db.VarChar(25)
  lastname String   @db.VarChar(40)
  phone    String   @unique @db.VarChar(20)
  birth    DateTime @db.Date
  password String   @db.VarChar(150)
  Gender   Gender?  @relation(fields: [genderId], references: [id])
  genderId Int?
  Roles    Roles?   @relation(fields: [roleId], references: [id])
  roleId   Int?
  tokenId  Token?
  Order    Order[]
}

model Gender {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(25)
  users Users[]
}

model Roles {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(20)
  users Users[]
}

model Token {
  id           Int     @id @default(autoincrement())
  refreshToken String?
  Users        Users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int     @unique
}

model Image {
  id   Int    @id @default(autoincrement())
  path String @unique
  News News?
  Car  Car[]
}

model News {
  id          String @id @default(uuid()) @db.Uuid
  title       String @unique @db.VarChar(100)
  description String
  Image       Image  @relation(fields: [banner], references: [id])
  banner      Int    @unique
}

model Car {
  id              Int            @id @default(autoincrement())
  modelName       ModelName?     @relation(fields: [modelNameId], references: [id])
  modelNameId     Int?
  equipment       Equipment?     @relation(fields: [equipmentId], references: [id])
  equipmentId     Int?
  price           Decimal        @db.Decimal(38, 2)
  transmission    String         @db.VarChar(100)
  numberOfGears   String         @db.VarChar(100)
  typeOfDrive     String         @db.VarChar(100)
  clearance       String         @db.VarChar(100)
  fuelTankVolume  String         @db.VarChar(100)
  trunkVolume     String         @db.VarChar(100)
  length          String         @db.VarChar(100)
  width           String         @db.VarChar(100)
  height          String         @db.VarChar(100)
  payload         String         @db.VarChar(100)
  maxSpeed        String         @db.VarChar(100)
  accelerationUp  String         @db.VarChar(100)
  fuelConsumption String         @db.VarChar(100)
  options         OptionsOnCar[]
  banner          Image          @relation(fields: [bannerId], references: [id])
  bannerId        Int
  colors          ColorsOnCars[]
  order           Order[]
}

model Equipment {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(100)
  Car  Car[]
}

model Option {
  id   Int            @id @default(autoincrement())
  name String         @unique @db.VarChar(100)
  cars OptionsOnCar[]
}

model OptionsOnCar {
  Car      Car    @relation(fields: [carId], references: [id])
  carId    Int
  Option   Option @relation(fields: [optionId], references: [id])
  optionId Int

  @@id([carId, optionId])
}

model ModelName {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(100)
  Car  Car[]
}

model Colors {
  id   Int            @id @default(autoincrement())
  name String         @db.VarChar(150)
  code String         @unique @db.VarChar(100)
  cars ColorsOnCars[]
}

model ColorsOnCars {
  car      Car    @relation(fields: [carId], references: [id])
  carId    Int
  color    Colors @relation(fields: [colorsId], references: [id])
  colorsId Int

  @@id([carId, colorsId])
}

model Status {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(40)
  Order Order[]
}

model Order {
  id       String   @id @default(uuid()) @db.Uuid
  Users    Users    @relation(fields: [userId], references: [id])
  userId   Int
  Status   Status   @relation(fields: [statusId], references: [id])
  statusId Int
  date     DateTime @db.Date
  Car      Car      @relation(fields: [carId], references: [id])
  carId    Int
}
